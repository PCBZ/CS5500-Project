generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  pmm
  smm
  vmm
}

enum ReviewStatus {
  completed
  pending
}

enum DonorStatus {
  Pending
  Approved
  Excluded
  AutoExcluded
}

enum EventStatus {
  Planning
  ListGeneration
  Review
  Ready
  Complete
}

model User {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(255)
  email          String           @unique @db.VarChar(255)
  password       String           @db.VarChar(255)
  role           Role             @default(pmm)
  generatedLists EventDonorList[]
  createdEvents  Event[]

  @@map("users")
}

model EventDonorList {
  id           Int          @id @default(autoincrement())
  eventId      Int
  name         String       @db.VarChar(255)
  totalDonors  Int          @default(0)
  approved     Int          @default(0)
  excluded     Int          @default(0)
  pending      Int          @default(0)
  autoExcluded Int          @default(0)
  reviewStatus ReviewStatus @default(pending)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  generatedBy  Int
  event        Event        @relation(fields: [eventId], references: [id])
  generator    User         @relation(fields: [generatedBy], references: [id])
  eventDonors  EventDonor[]

  @@map("event_donor_lists")
}

model EventDonor {
  id            Int            @id @default(autoincrement())
  donorListId   Int
  donorId       Int
  status        DonorStatus
  excludeReason String?        @db.VarChar(255)
  reviewerId    Int?
  reviewDate    DateTime?
  comments      String?        @db.Text
  autoExcluded  Boolean        @default(false)
  donorList     EventDonorList @relation(fields: [donorListId], references: [id])
  donor         Donor          @relation(fields: [donorId], references: [id])

  @@map("event_donors")
}

model Donor {
  id                         Int          @id @default(autoincrement())
  pmm                        String?
  smm                        String?
  vmm                        String?
  excluded                   Boolean      @default(false)
  deceased                   Boolean      @default(false)
  firstName                  String?
  nickName                   String?
  lastName                   String?
  organizationName           String?
  totalDonations             Float        @default(0)
  totalPledges               Float        @default(0)
  largestGift                Float        @default(0)
  largestGiftAppeal          String?
  firstGiftDate              DateTime?
  lastGiftDate               DateTime?
  lastGiftAmount             Float        @default(0)
  lastGiftRequest            String?
  lastGiftAppeal             String?
  addressLine1               String?
  addressLine2               String?
  city                       String?
  contactPhoneType           String?
  phoneRestrictions          String?
  emailRestrictions          String?
  communicationRestrictions  String?
  subscriptionEventsInPerson String?
  subscriptionEventsMagazine String?
  communicationPreference    String?
  tags                       String?      @db.Text
  eventDonors                EventDonor[]

  @@map("donors")
}

model Event {
  id                         Int              @id @default(autoincrement())
  name                       String           @db.VarChar(255)
  type                       String           @db.VarChar(255)
  date                       DateTime
  location                   String           @db.VarChar(255)
  capacity                   Int              @default(0)
  focus                      String?          @db.VarChar(255)
  criteriaMinGivingLevel     Float            @default(0)
  timelineListGenerationDate DateTime?
  timelineReviewDeadline     DateTime?
  timelineInvitationDate     DateTime?
  status                     EventStatus      @default(Planning)
  createdAt                  DateTime         @default(now())
  updatedAt                  DateTime         @updatedAt
  createdBy                  Int
  creator                    User             @relation(fields: [createdBy], references: [id])
  donorLists                 EventDonorList[]

  @@map("events")
}
