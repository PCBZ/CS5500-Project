name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm run install:all

      - name: Run ESLint
        run: |
          cd client && npm run lint
          cd ../Server && npm run lint

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm run install:all

    - name: Build client
      working-directory: ./client
      env:
        CI: false
      run: npm run build

  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm run install:all

    - name: Run client tests
      working-directory: ./client
      run: npm test -- --watchAll=false

    - name: Set up test database
      working-directory: ./Server
      env:
        DATABASE_URL: "mysql://testuser:testpass@localhost:3306/testdb"
      run: |
        npx prisma generate
        npx prisma db push

    - name: Run server tests
      working-directory: ./Server
      env:
        DATABASE_URL: "mysql://testuser:testpass@localhost:3306/testdb"
        NODE_ENV: test
      run: npm test